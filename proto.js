/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

// goog.provide('proto.transit_realtime.Alert');
// goog.provide('proto.transit_realtime.Alert.Cause');
// goog.provide('proto.transit_realtime.Alert.Effect');

// goog.require('jspb.BinaryReader');
// goog.require('jspb.BinaryWriter');
// goog.require('jspb.Message');
// goog.require('proto.transit_realtime.EntitySelector');
// goog.require('proto.transit_realtime.TimeRange');
// goog.require('proto.transit_realtime.TranslatedString');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transit_realtime.Alert = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 12, proto.transit_realtime.Alert.repeatedFields_, null);
};
goog.inherits(proto.transit_realtime.Alert, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.transit_realtime.Alert.displayName = 'proto.transit_realtime.Alert';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.transit_realtime.Alert.repeatedFields_ = [1,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transit_realtime.Alert.prototype.toObject = function(opt_includeInstance) {
  return proto.transit_realtime.Alert.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transit_realtime.Alert} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transit_realtime.Alert.toObject = function(includeInstance, msg) {
  var f, obj = {
    activePeriodList: jspb.Message.toObjectList(msg.getActivePeriodList(),
    proto.transit_realtime.TimeRange.toObject, includeInstance),
    informedEntityList: jspb.Message.toObjectList(msg.getInformedEntityList(),
    proto.transit_realtime.EntitySelector.toObject, includeInstance),
    cause: jspb.Message.getFieldWithDefault(msg, 6, 1),
    effect: jspb.Message.getFieldWithDefault(msg, 7, 8),
    url: (f = msg.getUrl()) && proto.transit_realtime.TranslatedString.toObject(includeInstance, f),
    headerText: (f = msg.getHeaderText()) && proto.transit_realtime.TranslatedString.toObject(includeInstance, f),
    descriptionText: (f = msg.getDescriptionText()) && proto.transit_realtime.TranslatedString.toObject(includeInstance, f)
  };

  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.transit_realtime.Alert.extensions, proto.transit_realtime.Alert.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transit_realtime.Alert}
 */
proto.transit_realtime.Alert.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transit_realtime.Alert;
  return proto.transit_realtime.Alert.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transit_realtime.Alert} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transit_realtime.Alert}
 */
proto.transit_realtime.Alert.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.transit_realtime.TimeRange;
      reader.readMessage(value,proto.transit_realtime.TimeRange.deserializeBinaryFromReader);
      msg.addActivePeriod(value);
      break;
    case 5:
      var value = new proto.transit_realtime.EntitySelector;
      reader.readMessage(value,proto.transit_realtime.EntitySelector.deserializeBinaryFromReader);
      msg.addInformedEntity(value);
      break;
    case 6:
      var value = /** @type {!proto.transit_realtime.Alert.Cause} */ (reader.readEnum());
      msg.setCause(value);
      break;
    case 7:
      var value = /** @type {!proto.transit_realtime.Alert.Effect} */ (reader.readEnum());
      msg.setEffect(value);
      break;
    case 8:
      var value = new proto.transit_realtime.TranslatedString;
      reader.readMessage(value,proto.transit_realtime.TranslatedString.deserializeBinaryFromReader);
      msg.setUrl(value);
      break;
    case 10:
      var value = new proto.transit_realtime.TranslatedString;
      reader.readMessage(value,proto.transit_realtime.TranslatedString.deserializeBinaryFromReader);
      msg.setHeaderText(value);
      break;
    case 11:
      var value = new proto.transit_realtime.TranslatedString;
      reader.readMessage(value,proto.transit_realtime.TranslatedString.deserializeBinaryFromReader);
      msg.setDescriptionText(value);
      break;
    default:
      jspb.Message.readBinaryExtension(msg, reader, proto.transit_realtime.Alert.extensionsBinary,
        proto.transit_realtime.Alert.prototype.getExtension,
        proto.transit_realtime.Alert.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transit_realtime.Alert.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transit_realtime.Alert.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transit_realtime.Alert} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transit_realtime.Alert.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActivePeriodList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.transit_realtime.TimeRange.serializeBinaryToWriter
    );
  }
  f = message.getInformedEntityList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.transit_realtime.EntitySelector.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.transit_realtime.Alert.Cause} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {!proto.transit_realtime.Alert.Effect} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getUrl();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.transit_realtime.TranslatedString.serializeBinaryToWriter
    );
  }
  f = message.getHeaderText();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.transit_realtime.TranslatedString.serializeBinaryToWriter
    );
  }
  f = message.getDescriptionText();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.transit_realtime.TranslatedString.serializeBinaryToWriter
    );
  }
  jspb.Message.serializeBinaryExtensions(message, writer,
    proto.transit_realtime.Alert.extensionsBinary, proto.transit_realtime.Alert.prototype.getExtension);
};


/**
 * @enum {number}
 */
proto.transit_realtime.Alert.Cause = {
  UNKNOWN_CAUSE: 1,
  OTHER_CAUSE: 2,
  TECHNICAL_PROBLEM: 3,
  STRIKE: 4,
  DEMONSTRATION: 5,
  ACCIDENT: 6,
  HOLIDAY: 7,
  WEATHER: 8,
  MAINTENANCE: 9,
  CONSTRUCTION: 10,
  POLICE_ACTIVITY: 11,
  MEDICAL_EMERGENCY: 12
};

/**
 * @enum {number}
 */
proto.transit_realtime.Alert.Effect = {
  NO_SERVICE: 1,
  REDUCED_SERVICE: 2,
  SIGNIFICANT_DELAYS: 3,
  DETOUR: 4,
  ADDITIONAL_SERVICE: 5,
  MODIFIED_SERVICE: 6,
  OTHER_EFFECT: 7,
  UNKNOWN_EFFECT: 8,
  STOP_MOVED: 9
};

/**
 * repeated TimeRange active_period = 1;
 * @return {!Array<!proto.transit_realtime.TimeRange>}
 */
proto.transit_realtime.Alert.prototype.getActivePeriodList = function() {
  return /** @type{!Array<!proto.transit_realtime.TimeRange>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.transit_realtime.TimeRange, 1));
};


/** @param {!Array<!proto.transit_realtime.TimeRange>} value */
proto.transit_realtime.Alert.prototype.setActivePeriodList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.transit_realtime.TimeRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.transit_realtime.TimeRange}
 */
proto.transit_realtime.Alert.prototype.addActivePeriod = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.transit_realtime.TimeRange, opt_index);
};


proto.transit_realtime.Alert.prototype.clearActivePeriodList = function() {
  this.setActivePeriodList([]);
};


/**
 * repeated EntitySelector informed_entity = 5;
 * @return {!Array<!proto.transit_realtime.EntitySelector>}
 */
proto.transit_realtime.Alert.prototype.getInformedEntityList = function() {
  return /** @type{!Array<!proto.transit_realtime.EntitySelector>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.transit_realtime.EntitySelector, 5));
};


/** @param {!Array<!proto.transit_realtime.EntitySelector>} value */
proto.transit_realtime.Alert.prototype.setInformedEntityList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.transit_realtime.EntitySelector=} opt_value
 * @param {number=} opt_index
 * @return {!proto.transit_realtime.EntitySelector}
 */
proto.transit_realtime.Alert.prototype.addInformedEntity = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.transit_realtime.EntitySelector, opt_index);
};


proto.transit_realtime.Alert.prototype.clearInformedEntityList = function() {
  this.setInformedEntityList([]);
};


/**
 * optional Cause cause = 6;
 * @return {!proto.transit_realtime.Alert.Cause}
 */
proto.transit_realtime.Alert.prototype.getCause = function() {
  return /** @type {!proto.transit_realtime.Alert.Cause} */ (jspb.Message.getFieldWithDefault(this, 6, 1));
};


/** @param {!proto.transit_realtime.Alert.Cause} value */
proto.transit_realtime.Alert.prototype.setCause = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.transit_realtime.Alert.prototype.clearCause = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.transit_realtime.Alert.prototype.hasCause = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Effect effect = 7;
 * @return {!proto.transit_realtime.Alert.Effect}
 */
proto.transit_realtime.Alert.prototype.getEffect = function() {
  return /** @type {!proto.transit_realtime.Alert.Effect} */ (jspb.Message.getFieldWithDefault(this, 7, 8));
};


/** @param {!proto.transit_realtime.Alert.Effect} value */
proto.transit_realtime.Alert.prototype.setEffect = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.transit_realtime.Alert.prototype.clearEffect = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.transit_realtime.Alert.prototype.hasEffect = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional TranslatedString url = 8;
 * @return {?proto.transit_realtime.TranslatedString}
 */
proto.transit_realtime.Alert.prototype.getUrl = function() {
  return /** @type{?proto.transit_realtime.TranslatedString} */ (
    jspb.Message.getWrapperField(this, proto.transit_realtime.TranslatedString, 8));
};


/** @param {?proto.transit_realtime.TranslatedString|undefined} value */
proto.transit_realtime.Alert.prototype.setUrl = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.transit_realtime.Alert.prototype.clearUrl = function() {
  this.setUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.transit_realtime.Alert.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional TranslatedString header_text = 10;
 * @return {?proto.transit_realtime.TranslatedString}
 */
proto.transit_realtime.Alert.prototype.getHeaderText = function() {
  return /** @type{?proto.transit_realtime.TranslatedString} */ (
    jspb.Message.getWrapperField(this, proto.transit_realtime.TranslatedString, 10));
};


/** @param {?proto.transit_realtime.TranslatedString|undefined} value */
proto.transit_realtime.Alert.prototype.setHeaderText = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.transit_realtime.Alert.prototype.clearHeaderText = function() {
  this.setHeaderText(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.transit_realtime.Alert.prototype.hasHeaderText = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional TranslatedString description_text = 11;
 * @return {?proto.transit_realtime.TranslatedString}
 */
proto.transit_realtime.Alert.prototype.getDescriptionText = function() {
  return /** @type{?proto.transit_realtime.TranslatedString} */ (
    jspb.Message.getWrapperField(this, proto.transit_realtime.TranslatedString, 11));
};


/** @param {?proto.transit_realtime.TranslatedString|undefined} value */
proto.transit_realtime.Alert.prototype.setDescriptionText = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.transit_realtime.Alert.prototype.clearDescriptionText = function() {
  this.setDescriptionText(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.transit_realtime.Alert.prototype.hasDescriptionText = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.transit_realtime.Alert.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.transit_realtime.Alert.extensionsBinary = {};

module.exports = proto;